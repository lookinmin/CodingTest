최단 경로
- 각 지점은 그래프에서 노드
- directed edge
- weighted edge

1. 다익스트라
: 특정 노드에서 출발 -> 다른 모든 노드로 가는 최단 경로 계산
: negative edge가 없을 때 가능(현실)
: 매 상황에서 가장 비용이 적은 노드 선택 = '그리디'
: 가장 가까운 노드까지의 거리를 결정한 이후부터는 해당 노드까지 간다는 사실은 바뀌지 않음
: 이미 방문처리가 된 노드는 해당 노드까지의 최단거리 값이 더 이상 바뀌지 않음
: 길찾기 문제 자체는 dp의 원리가 적용

- 동작과정
1) 출발 노드 설정
2) 최단 거리 테이블 초기화 		# 모든 노드 까지의 거리를 INF, 자기 자신과의 거리는 0
3) not visited 노드들 중 최단거리가 가장 짧은 노드 선택		# 매상황마다 그리디 적으로
4) 해당 노드를 거쳐 다른 노드로 가는 비용을 계산하여 테이블 갱신
5) 3, 4 반복

- 구현 방법
: 단계마다 not visited 노드 중에서 최단거리가 가장 짧은 노드를 선택
-> 단계마다 1차원 리스트의 모든 원소를 순차 탐색으로 확인

- 시간복잡도
: O(v^2)		# 노드 수의 제곱
: 즉, 노드 개수가 5000개 이하라면 해결 가능, 노드 개수가 10000개를 넘어가면 불가능
: 노드가 10,000개 이상이라면 -> 우선순위 큐

- 우선순위 큐 구현 = heapq
: heap은 노드의 삽입, 삭제에 대해 O(log N)
: 매 단계마다 최단 거리가 가장 짧은 노드를 선택하기 위해 heap 사용
: 즉, 최단거리 테이블을  갱신하는데 있어서 걸리는 시간을 heapq를 사용함으로 감소

2. 

